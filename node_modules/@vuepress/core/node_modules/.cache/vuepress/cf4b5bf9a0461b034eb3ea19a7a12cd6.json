{"remainingRequest":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/@vuepress/theme-default/components/PageNav.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/@vuepress/theme-default/components/PageNav.vue","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/XiaomiWiki.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkByZXF1aXJlICcuLi9zdHlsZXMvd3JhcHBlci5zdHlsJwoKLnBhZ2UtbmF2CiAgQGV4dGVuZCAkd3JhcHBlcgogIHBhZGRpbmctdG9wIDFyZW0KICBwYWRkaW5nLWJvdHRvbSAwCiAgLmlubmVyCiAgICBtaW4taGVpZ2h0IDJyZW0KICAgIG1hcmdpbi10b3AgMAogICAgYm9yZGVyLXRvcCAxcHggc29saWQgJGJvcmRlckNvbG9yCiAgICBwYWRkaW5nLXRvcCAxcmVtCiAgICBvdmVyZmxvdyBhdXRvIC8vIGNsZWFyIGZsb2F0CiAgLm5leHQKICAgIGZsb2F0IHJpZ2h0Cg=="},{"version":3,"sources":["PageNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageNav.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\n  <div\n    v-if=\"prev || next\"\n    class=\"page-nav\"\n  >\n    <p class=\"inner\">\n      <span\n        v-if=\"prev\"\n        class=\"prev\"\n      >\n        ←\n        <a\n          v-if=\"prev.type === 'external'\"\n          class=\"prev\"\n          :href=\"prev.path\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {{ prev.title || prev.path }}\n\n          <OutboundLink />\n        </a>\n\n        <RouterLink\n          v-else\n          class=\"prev\"\n          :to=\"prev.path\"\n        >\n          {{ prev.title || prev.path }}\n        </RouterLink>\n      </span>\n\n      <span\n        v-if=\"next\"\n        class=\"next\"\n      >\n        <a\n          v-if=\"next.type === 'external'\"\n          :href=\"next.path\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {{ next.title || next.path }}\n\n          <OutboundLink />\n        </a>\n\n        <RouterLink\n          v-else\n          :to=\"next.path\"\n        >\n          {{ next.title || next.path }}\n        </RouterLink>\n        →\n      </span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { resolvePage } from '../util'\nimport isString from 'lodash/isString'\nimport isNil from 'lodash/isNil'\n\nexport default {\n  name: 'PageNav',\n\n  props: ['sidebarItems'],\n\n  computed: {\n    prev () {\n      return resolvePageLink(LINK_TYPES.PREV, this)\n    },\n\n    next () {\n      return resolvePageLink(LINK_TYPES.NEXT, this)\n    }\n  }\n}\n\nfunction resolvePrev (page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext (page, items) {\n  return find(page, items, 1)\n}\n\nconst LINK_TYPES = {\n  NEXT: {\n    resolveLink: resolveNext,\n    getThemeLinkConfig: ({ nextLinks }) => nextLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.next\n  },\n  PREV: {\n    resolveLink: resolvePrev,\n    getThemeLinkConfig: ({ prevLinks }) => prevLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.prev\n  }\n}\n\nfunction resolvePageLink (\n  linkType,\n  { $themeConfig, $page, $route, $site, sidebarItems }\n) {\n  const { resolveLink, getThemeLinkConfig, getPageLinkConfig } = linkType\n\n  // Get link config from theme\n  const themeLinkConfig = getThemeLinkConfig($themeConfig)\n\n  // Get link config from current page\n  const pageLinkConfig = getPageLinkConfig($page)\n\n  // Page link config will overwrite global theme link config if defined\n  const link = isNil(pageLinkConfig) ? themeLinkConfig : pageLinkConfig\n\n  if (link === false) {\n    return\n  } else if (isString(link)) {\n    return resolvePage($site.pages, link, $route.path)\n  } else {\n    return resolveLink($page, sidebarItems)\n  }\n}\n\nfunction find (page, items, offset) {\n  const res = []\n  flatten(items, res)\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === decodeURIComponent(page.path)) {\n      return res[i + offset]\n    }\n  }\n}\n\nfunction flatten (items, res) {\n  for (let i = 0, l = items.length; i < l; i++) {\n    if (items[i].type === 'group') {\n      flatten(items[i].children || [], res)\n    } else {\n      res.push(items[i])\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl'\n\n.page-nav\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 0\n  .inner\n    min-height 2rem\n    margin-top 0\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n</style>\n"]}]}